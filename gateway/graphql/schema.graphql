type Account {
    id: ID!
    name: String!
    email: String!
    role: String!
    orders: [Order!]!
}

type Product {
    id: ID!
    name: String!
    description: String!
    price: Float!
    stock: Int!
    sold: Int!
}

type Order {
    id: ID!
    createdAt: String!
    totalPrice: Float!
    products: [OrderedProduct!]!
}

type OrderedProduct {
    id: ID!
    name: String!
    description: String!
    price: Float!
    quantity: Int!
    stock: Int!
}

input Pagination {
    skip: Int
    take: Int
}

input AccountInput {
    name: String!
    email: String!
    password: String!
    role: String
}

input ProductInput {
    name: String!
    description: String!
    price: Float!
    stock: Int!
}

input OrderedProductInput {
    id: ID!
    quantity: Int!
}

input OrderInput {
    accountId: ID!
    products: [OrderedProductInput!]
}

input LoginInput {
    email: String!
    password: String!
}

input RefreshTokenInput {
    userId: String!
}

type AuthResponse {
    accessToken: String!
    refreshToken: String!
    userId: ID!
    email: String!
    role: String!
}

type Mutation {
    createProduct(input: ProductInput!): Product!
    createOrder(input: OrderInput!): Order!

    signup(input: AccountInput!): AuthResponse!
    login(input: LoginInput!): AuthResponse!
    refreshToken(input: RefreshTokenInput!): AuthResponse!
    logout(input: LogoutInput): LogoutResponse!
    resetPassword(input: ResetPasswordInput!): ResetPasswordResponse!
}

input ResetPasswordInput {
    email: String!
    password: String!
}
type ResetPasswordResponse {
    message: String!
    success: Boolean! 
}

type LogoutResponse {
    message: String!
    success: Boolean!
}

type Query {
    accounts(pagination: Pagination, id: ID, name: String): [Account!]!
    products(pagination: Pagination, query: String, id: ID): [Product!]!
    currentUsers(pagination: Pagination, role: String): [Account!]!
}

type Subscription {
  orderStatusChanged(orderId: ID): OrderStatusUpdate!
}

type OrderStatusUpdate {
  orderId: ID!
  status: String!
  updatedAt: String!
}

input LogoutInput {
    userId: String!
}

